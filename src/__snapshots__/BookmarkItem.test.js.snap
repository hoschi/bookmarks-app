// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`remove Mutation 1`] = `
<Mutation
  ignoreResults={true}
  mutation={
    Object {
      "definitions": Array [
        Object {
          "directives": Array [],
          "kind": "OperationDefinition",
          "name": Object {
            "kind": "Name",
            "value": "RemoveBookmark",
          },
          "operation": "mutation",
          "selectionSet": Object {
            "kind": "SelectionSet",
            "selections": Array [
              Object {
                "arguments": Array [
                  Object {
                    "kind": "Argument",
                    "name": Object {
                      "kind": "Name",
                      "value": "id",
                    },
                    "value": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                    },
                  },
                ],
                "directives": Array [],
                "kind": "Field",
                "name": Object {
                  "kind": "Name",
                  "value": "removeBookmark",
                },
              },
            ],
          },
          "variableDefinitions": Array [
            Object {
              "kind": "VariableDefinition",
              "type": Object {
                "kind": "NonNullType",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "ID",
                  },
                },
              },
              "variable": Object {
                "kind": "Variable",
                "name": Object {
                  "kind": "Name",
                  "value": "id",
                },
              },
            },
          ],
        },
      ],
      "kind": "Document",
      "loc": Object {
        "end": 79,
        "source": Object {
          "body": "
    mutation RemoveBookmark($id: ID!) {
        removeBookmark(id: $id)
    }
",
          "locationOffset": Object {
            "column": 1,
            "line": 1,
          },
          "name": "GraphQL request",
        },
        "start": 0,
      },
    }
  }
  refetchQueries={
    Array [
      Object {
        "query": Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "operation": "query",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "arguments": Array [
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "sortField",
                        },
                        "value": Object {
                          "block": false,
                          "kind": "StringValue",
                          "value": "isRead",
                        },
                      },
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "sortOrder",
                        },
                        "value": Object {
                          "block": false,
                          "kind": "StringValue",
                          "value": "ASC",
                        },
                      },
                    ],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "allBookmarks",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "title",
                          },
                        },
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "url",
                          },
                        },
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "isRead",
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 153,
            "source": Object {
              "body": "
    {
        allBookmarks(sortField: \\"isRead\\", sortOrder: \\"ASC\\") {
            id
            title
            url
            isRead
        }
    }
",
              "locationOffset": Object {
                "column": 1,
                "line": 1,
              },
              "name": "GraphQL request",
            },
            "start": 0,
          },
        },
      },
    ]
  }
>
  <Component />
</Mutation>
`;

exports[`render 1`] = `
<WithStyles(ListItem)
  className="BookmarkItem-root-1"
  classes={
    Object {
      "container": "BookmarkItem-listItemContainer-2",
    }
  }
  component="a"
  href="https://medium.com/really-cool-article?campaign_id=45"
>
  <WithStyles(Checkbox)
    aria-label="Mark read"
    checked={false}
    disableRipple={true}
    onChange={[Function]}
    tabIndex={-1}
  />
  <WithStyles(ListItemText)
    classes={
      Object {
        "primary": "",
      }
    }
    primary="my test title"
  />
  <WithStyles(ListItemSecondaryAction)
    className="BookmarkItem-remove-4"
  >
    <WithStyles(IconButton)
      aria-label="remove item"
      onClick={[Function]}
    >
      <pure(DeleteIcon) />
    </WithStyles(IconButton)>
  </WithStyles(ListItemSecondaryAction)>
</WithStyles(ListItem)>
`;

exports[`render with read item 1`] = `
<WithStyles(ListItem)
  className="BookmarkItem-root-1"
  classes={
    Object {
      "container": "BookmarkItem-listItemContainer-2",
    }
  }
  component="a"
  href="https://medium.com/really-cool-article?campaign_id=45"
>
  <WithStyles(Checkbox)
    aria-label="Mark unread"
    checked={true}
    disableRipple={true}
    onChange={[Function]}
    tabIndex={-1}
  />
  <WithStyles(ListItemText)
    classes={
      Object {
        "primary": "BookmarkItem-linkRead-3",
      }
    }
    primary="my test title"
  />
  <WithStyles(ListItemSecondaryAction)
    className="BookmarkItem-remove-4"
  >
    <WithStyles(IconButton)
      aria-label="remove item"
      onClick={[Function]}
    >
      <pure(DeleteIcon) />
    </WithStyles(IconButton)>
  </WithStyles(ListItemSecondaryAction)>
</WithStyles(ListItem)>
`;

exports[`update Mutation 1`] = `
<Mutation
  ignoreResults={true}
  mutation={
    Object {
      "definitions": Array [
        Object {
          "directives": Array [],
          "kind": "OperationDefinition",
          "name": Object {
            "kind": "Name",
            "value": "ChangeReadFlag",
          },
          "operation": "mutation",
          "selectionSet": Object {
            "kind": "SelectionSet",
            "selections": Array [
              Object {
                "arguments": Array [
                  Object {
                    "kind": "Argument",
                    "name": Object {
                      "kind": "Name",
                      "value": "id",
                    },
                    "value": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                    },
                  },
                  Object {
                    "kind": "Argument",
                    "name": Object {
                      "kind": "Name",
                      "value": "isRead",
                    },
                    "value": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "isRead",
                      },
                    },
                  },
                ],
                "directives": Array [],
                "kind": "Field",
                "name": Object {
                  "kind": "Name",
                  "value": "updateBookmark",
                },
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                    },
                    Object {
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "isRead",
                      },
                    },
                  ],
                },
              },
            ],
          },
          "variableDefinitions": Array [
            Object {
              "kind": "VariableDefinition",
              "type": Object {
                "kind": "NonNullType",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "ID",
                  },
                },
              },
              "variable": Object {
                "kind": "Variable",
                "name": Object {
                  "kind": "Name",
                  "value": "id",
                },
              },
            },
            Object {
              "kind": "VariableDefinition",
              "type": Object {
                "kind": "NonNullType",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "Boolean",
                  },
                },
              },
              "variable": Object {
                "kind": "Variable",
                "name": Object {
                  "kind": "Name",
                  "value": "isRead",
                },
              },
            },
          ],
        },
      ],
      "kind": "Document",
      "loc": Object {
        "end": 161,
        "source": Object {
          "body": "
    mutation ChangeReadFlag($id: ID!, $isRead: Boolean!) {
        updateBookmark(id: $id, isRead: $isRead) {
            id
            isRead
        }
    }
",
          "locationOffset": Object {
            "column": 1,
            "line": 1,
          },
          "name": "GraphQL request",
        },
        "start": 0,
      },
    }
  }
  refetchQueries={
    Array [
      Object {
        "query": Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "operation": "query",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "arguments": Array [
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "sortField",
                        },
                        "value": Object {
                          "block": false,
                          "kind": "StringValue",
                          "value": "isRead",
                        },
                      },
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "sortOrder",
                        },
                        "value": Object {
                          "block": false,
                          "kind": "StringValue",
                          "value": "ASC",
                        },
                      },
                    ],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "allBookmarks",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "title",
                          },
                        },
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "url",
                          },
                        },
                        Object {
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "isRead",
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 153,
            "source": Object {
              "body": "
    {
        allBookmarks(sortField: \\"isRead\\", sortOrder: \\"ASC\\") {
            id
            title
            url
            isRead
        }
    }
",
              "locationOffset": Object {
                "column": 1,
                "line": 1,
              },
              "name": "GraphQL request",
            },
            "start": 0,
          },
        },
      },
    ]
  }
>
  <Component />
</Mutation>
`;
